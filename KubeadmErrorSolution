sudo kubeadm init
WARNING: Couldn't create the interface used for talking to the container runtime: failed to create new CRI runtime service: validate service connection: validate CRI v1 runtime API for endpoint "unix:///var/run/containerd/containerd.sock": rpc error: code = Unimplemented desc = unknown service runtime.v1.RuntimeService

Edit Containerd configuration: Update the /etc/containerd/config.toml file to comment out or remove the disabled_plugins setting for “cri”.
# disabled_plugins = ["cri"]
it may be empty then also comment out and retry kubeadm init.
For reverting back all changes made by kubeadm init=> kubeadm reset
______________________________________________________
memcache error: could not connect to ip:6443 port
kubectl get nodes show this error.
Solution:
sudo kubeadm init --control-plane-endpoint 192.168.122.6 (your VM NAT ip)
sudo apt install strace
sudo -i
swapoff -a (do it as root user)
exit
strace -eopenat kubectl version
then try kubectl get nodes
multiple times error comes then 
sudo swapoff -a run it multiple times



________________________________________________________
# kubeadm-config.yaml
kind: ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kubernetesVersion: v1.21.0
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd

kubeadm init --config kubeadm-config.yaml
__________________________________________________________
swapoff -a (for current session)
sudo sed -i '/swap/s/^\(.*\)$/#\1/g' /etc/fstab
cat /etc/sysconfig/selinux | grep SELINUX=
sudo sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux
 sudo setenforce 0 (for current session)
sudo systemctl stop firewalld.service
 sudo systemctl disable firewalld.service
 sudo modprobe br_netfilter
 lsmod | grep br_netfilter
sudo sysctl -a | grep net.bridge.bridge-nf-call-iptables
***************************************************************
#yum install yum-utils -y
#yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
#yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

sudo dnf -y install dnf-plugins-core
sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
******************************************************************
After installing make SystemdCgroup as true:
containerd config default | sudo tee /etc/containerd/config.toml | grep SystemdCgroup
sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
cat /etc/containerd/config.toml | grep SystemdCgroup
systemctl start docker
systemctl enable docker
docker run hello-world
******************************************************************
Add kubernetes repo
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF
******************************************************
*******************************************************
install the 3 services
sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
***********************************************************
systemctl enable kubelet --now
kubeadm init
kubectl get nodes
Google=>kubernetes pod networking
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
kubectl get nodes (should be ready now)
kubectl get pods -A
cat > pod1.yaml
kubectl create -f pod1.yaml
kubectl get pod (will be in pending state forever because of taint)
kubectl get nodes
kubectl describe node master1.example.com | grep taint
kubectl delete -f pod1.yaml

check the script and run it on worker nodes

kubectl get node

yum install bash-completion
source /usr/share/bash-completion/bash_completion
echo 'source < (kubectl completion bash)' >>~/.bashrc
kubectl completion bash > /etc/bash_completion.d/kubectl






_____________________________________________________________

kubectl config set-cluster kubectl-prod --server=https://ip --certificate-authority=~/.kube/kubectl-prod.ca.crt


